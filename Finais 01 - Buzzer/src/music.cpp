#include <music.h>

int buzzPin = GPIO_NUM_4;
int channel = 0;

int p1[][2] = //Um compasso por linha
{
{N_E4, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, 2*SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, 
{N_E4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G4, SEMINIMA+COLCHEIA},  {N_G3, SEMINIMA+COLCHEIA},

{N_C4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA},
{N_G3, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA},
{N_D3, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA},

{N_A3, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_B3, 2*SEMICOLCHEIA}, {N_BB3, SEMICOLCHEIA},
{N_A3, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA},

{N_G3, COLCHEIA}, {N_E4, COLCHEIA}, {N_G4, COLCHEIA}, {N_A4, COLCHEIA},
{N_F4, SEMICOLCHEIA}, {N_G4, 2*SEMICOLCHEIA}, {N_E4, COLCHEIA}, {N_C4, SEMICOLCHEIA},
{N_D4, SEMICOLCHEIA}, {N_B3, SEMICOLCHEIA + FUSA},

//REPETE ACIMA
{N_C4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA},
{N_G3, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA},
{N_D3, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA},

{N_A3, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_B3, 2*SEMICOLCHEIA}, {N_BB3, SEMICOLCHEIA},
{N_A3, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA},

{N_G3, COLCHEIA}, {N_E4, COLCHEIA}, {N_G4, COLCHEIA}, {N_A4, COLCHEIA},
{N_F4, SEMICOLCHEIA}, {N_G4, 2*SEMICOLCHEIA}, {N_E4, COLCHEIA}, {N_C4, SEMICOLCHEIA},
{N_D4, SEMICOLCHEIA}, {N_B3, SEMICOLCHEIA + FUSA},

//---------------------------------------
{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G4, SEMICOLCHEIA}, {N_GB4, SEMICOLCHEIA}, 
{N_F4, SEMICOLCHEIA}, {N_DS4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_GS3, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, 

{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G4, SEMICOLCHEIA}, {N_GB4, SEMICOLCHEIA}, 
{N_F4, SEMICOLCHEIA}, {N_DS4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_C5, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, 
{N_C5, SEMICOLCHEIA}, {N_C5, SEMICOLCHEIA}, {PAUSA, 3*SEMICOLCHEIA},

{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G4, SEMICOLCHEIA}, {N_GB4, SEMICOLCHEIA}, 
{N_F4, SEMICOLCHEIA}, {N_DS4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_GS3, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, 

{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_DS4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_C4, SEMINIMA+COLCHEIA}, 

//REPETE ACIMA
{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G4, SEMICOLCHEIA}, {N_GB4, SEMICOLCHEIA}, 
{N_F4, SEMICOLCHEIA}, {N_DS4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_GS3, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, 

{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G4, SEMICOLCHEIA}, {N_GB4, SEMICOLCHEIA}, 
{N_F4, SEMICOLCHEIA}, {N_DS4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_C5, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, 
{N_C5, SEMICOLCHEIA}, {N_C5, SEMICOLCHEIA}, {PAUSA, 3*SEMICOLCHEIA},

{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G4, SEMICOLCHEIA}, {N_GB4, SEMICOLCHEIA}, 
{N_F4, SEMICOLCHEIA}, {N_DS4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_GS3, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, 

{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_DS4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_C4, SEMINIMA+COLCHEIA}, 

//--------------------------------------
{N_C4, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_C4, 2*SEMICOLCHEIA}, 
{N_C4, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_G3, COLCHEIA}, {PAUSA, COLCHEIA}, 

{N_C4, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_C4, 2*SEMICOLCHEIA}, 
{N_C4, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, {PAUSA, MINIMA}, 

{N_C4, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_C4, 2*SEMICOLCHEIA}, 
{N_C4, SEMICOLCHEIA}, {N_D4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, 
{PAUSA, SEMICOLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_G3, COLCHEIA}, {PAUSA, COLCHEIA}, 

{N_E4, SEMICOLCHEIA}, {N_E4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_E4, 2*SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, 
{N_E4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G4, SEMINIMA+COLCHEIA},  {N_G3, SEMINIMA+COLCHEIA},

{N_E4, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G3, SEMICOLCHEIA+COLCHEIA}, 
{N_GS3, COLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_F4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_F4, SEMICOLCHEIA},
{N_A3, COLCHEIA}, {PAUSA, COLCHEIA}, 

{N_B3, COLCHEIA}, {N_A4, COLCHEIA}, {N_A4, COLCHEIA}, {N_A4, COLCHEIA}, {N_G4, COLCHEIA}, 
{N_F4, COLCHEIA}, {N_E4, SEMICOLCHEIA}, {N_C4, COLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_G3, COLCHEIA}, 
{PAUSA, COLCHEIA}, 

{N_E4, SEMICOLCHEIA}, {N_C4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_G3, SEMICOLCHEIA+COLCHEIA}, 
{N_GS3, COLCHEIA}, {N_A3, SEMICOLCHEIA}, {N_F4, SEMICOLCHEIA}, {PAUSA, SEMICOLCHEIA}, {N_F4, SEMICOLCHEIA},
{N_A3, COLCHEIA}, {PAUSA, COLCHEIA}, 

{N_B3, COLCHEIA}, {N_F4, COLCHEIA}, {N_F4, COLCHEIA}, {N_F4, COLCHEIA}, {N_E4, COLCHEIA}, 
{N_D4, COLCHEIA}, {N_C4, MINIMA}, {PAUSA, MINIMA}, 

{-1, -1}
};

int p2[][2] = //Um compasso por linha
{
{(N_A4), COLCHEIA}, 
{N_BB4, COLCHEIA}, 
{N_B4, COLCHEIA}, 
{N_C5, SEMINIMA}, 
{-1, -1}
};

int p3[][2] = //Um compasso por linha
{
{(N_EB4), SEMICOLCHEIA}, 
{N_EB4, SEMICOLCHEIA}, 
{N_EB4, SEMICOLCHEIA}, 
{N_EB4, MINIMA}, 

{N_B3, MINIMA}, 
{N_DB4, SEMICOLCHEIA}, 
{N_EB4, MINIMA}, 
{N_DB4, SEMICOLCHEIA},
{N_EB4, SEMIBREVE}, 
{-1, -1}
};

int p4[][2] = //Um compasso por linha
{
{N_C4, SEMINIMA}, 
{N_E4, SEMINIMA}, 
{N_C4, MINIMA}, 
{-1, -1}
};

double tempo = 1.0;

//Inicializa a saída PWM que acionará o buzzer
void initializeBuzzer()
{
    //Configurando como saída
    pinMode(buzzPin, OUTPUT);
    //Indicando uso do canal 0
    ledcAttachPin(buzzPin, 0);
    //Configurando frequencia inicial de 2Khz e 8 bits de resolução
    ledcSetup(channel, 2000, 8);
}

void playTone(){
    //Coloca saída em 261hz
    ledcWriteTone(channel, N_C4);
    //Aguarda 1 segundo
    delay(1000);
    //Coloca a saída em 0Hz (silêncio)
    ledcWriteTone(channel, 0);
}

void play(int partitura[][2], double tMulti)
{
    int i = 0;//indice atual da nota
    while (true)
    {
        if (partitura[i][0] == -1)//indicação de finalização da música
        {
            Serial.println("Saiu");
            break;//se chegar ao indicador de fim da música, sai do loop
        }
        //Altera a frequência da saída para a frequência da nota
        ledcWriteTone(channel, partitura[i][0]);
        //Aguarda o tempo da nota, alterado pelo tempo indicado
        delay(partitura[i][1]*tMulti);
        i++;
    }
    ledcWriteTone(channel, 0); //Silencia a saída
}

void playInitSong(){
    play(p1, tempo);
}

void playAcessSong(){
    play(p3, tempo);
}

void playDeniedSong(){
    play(p4, tempo);
}